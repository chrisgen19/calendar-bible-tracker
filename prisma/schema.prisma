// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHER
  PREFER_NOT_TO_SAY
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING_VERIFICATION
}

model User {
  id                String     @id @default(uuid())
  email             String     @unique
  password          String
  firstName         String
  lastName          String
  gender            Gender
  phoneNumber       String?
  dateOfBirth       DateTime?
  country           String?
  city              String?
  address           String?
  postalCode        String?
  profilePicture    String?
  emailVerified     Boolean    @default(false)
  emailVerifiedAt   DateTime?
  phoneVerified     Boolean    @default(false)
  status            UserStatus @default(PENDING_VERIFICATION)
  lastLoginAt       DateTime?
  passwordResetToken String?
  passwordResetExpires DateTime?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  bibleReadings     BibleReading[]

  @@index([email])
  @@map("users")
}

model BibleReading {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  bibleBook   String
  chapters    String
  verses      String?
  dateRead    DateTime
  completed   Boolean  @default(false)
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([dateRead])
  @@map("bible_readings")
}
